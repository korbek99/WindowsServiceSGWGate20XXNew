//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsServiceNextiva.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceSendDataCameraToNextiva", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceSendDataCameraToNextiva(int AlarmSentChannel, int AlarmSentCustCompanyID, string AlarmSentDateIng, string AlarmSentDescription, int AlarmSentEstado, string AlarmSentIDE, string AlarmSentrctTarget, string AlarmSentRuleDescrip, int AlarmSentRuleID, int AlarmSentState, int AlarmSentTargetDirection, int AlarmSentTargetID, int AlarmSentTargetSpeed, int AlarmSentTargetType, int AlarmSentventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceTrackingErrorSWG", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceTrackingErrorSWG(System.DateTime Fecha, string MachineName, string UserName, int IdSistema, string Mensaje, int Resuelto, int NumeroError, string Modulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceDeviceByCompanyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceDeviceByCompanyID(int CustomerCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceIngrDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceIngrDevice(string DeviceIDE, string DeviceNameDescrip, int TypeDeviceID, int CustomerCompanyID, int DeviceChannel, string DeviceIDLogon, string DeviceIP, string DeviceUser, string DevicePass, string DevicePort, string DeviceDateIng, int DeviceEstado, int SystemDeviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceIngresoCustomerCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceIngresoCustomerCompany(string CustomerCompanyIDE, string CustomerCompanyName, string CustomerCompanyDir, string CustomerCompanyPhone, string CustomerCompanyCelPhone, string CustomerCompanyEmail, string CustomerCompanyFax, string CustomerCompanyWebSite, int CiudadID, string CustomerCompanyDateIng, int CustomerCompanyState, string CustomerCompanyShortName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceDeleteCustomerCompanyDataComuni", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceDeleteCustomerCompanyDataComuni(int CusCompanyDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceUpdateCustomerCompanyDataComuni", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceUpdateCustomerCompanyDataComuni(int CusCompanyDataID, int CustomerCompanyID, string CusCompanyDataCameraName, int CusCompanyDataIDE, string CusCompanyDataNextNiveles, string CusCompanyDataSiteName, string CusCompanyDataNameUrl, string CusCompanyDataSiteUser, string CusCompanyDataSitePass, string CusCompanyDataAlarmSite, string CusCompanyDataListenResponse, string CusCompanyDataListenError, string CusCompanyDataPathString, string CusCompanyDataFileName, int CusCompanyDataActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceIngrCustomerCompanyDataComuni", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceIngrCustomerCompanyDataComuni(int CustomerCompanyID, string CusCompanyDataCameraName, int CusCompanyDataIDE, string CusCompanyDataNextNiveles, string CusCompanyDataSiteName, string CusCompanyDataNameUrl, string CusCompanyDataSiteUser, string CusCompanyDataSitePass, string CusCompanyDataAlarmSite, string CusCompanyDataListenResponse, string CusCompanyDataListenError, string CusCompanyDataPathString, string CusCompanyDataFileName, int CusCompanyDataActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyDataComuniByCompanyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyDataComuniByCompanyID(int CustomerCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyDataComuniByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyDataComuniByID(int CusCompanyDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioCustomerCompany_Ingreso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServicioCustomerCompany_Ingreso(string CustomerCompanyIDE, string CustomerCompanyName, string CustomerCompanyDir, string CustomerCompanyPhone, string CustomerCompanyCelPhone, string CustomerCompanyEmail, string CustomerCompanyFax, string CustomerCompanyWebSite, int CiudadID, string CustomerCompanyDateIng, int CustomerCompanyState, string CustomerCompanyShortName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioCustomerCompany_Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServicioCustomerCompany_Update(int CustomerCompanyID, string CustomerCompanyIDE, string CustomerCompanyName, string CustomerCompanyDir, string CustomerCompanyPhone, string CustomerCompanyCelPhone, string CustomerCompanyEmail, string CustomerCompanyFax, string CustomerCompanyWebSite, int CiudadID, string CustomerCompanyDateIng, int CustomerCompanyState, string CustomerCompanyShortName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompany_Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceCustomerCompany_Delete(int CustomerCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyByCustomerIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyByCustomerIP(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyByCustomerID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyByCustomerID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyAllByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyAllByCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyAllListDrop", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyAllListDrop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanySearchByNameCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanySearchByNameCustomer(string str_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyByCiudadID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyByCiudadID(int CiudadID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceDeviceAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceDeviceAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceDeviceByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceDeviceByID(int DeviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceAllDeviceByCompanyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceAllDeviceByCompanyID(int CustomerCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceSystemDeviceGetAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceSystemDeviceGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceSystemDeviceByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceSystemDeviceByID(int SystemDeviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceSystemDevice_Ingreso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceSystemDevice_Ingreso(string SystemDeviceDescrip, string SystemDeviceUser, string SystemDevicePass, string SystemDeviceDateIng, int SystemDeviceEstado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceSystemDevice_Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceSystemDevice_Update(int SystemDeviceID, string SystemDeviceDescrip, string SystemDeviceUser, string SystemDevicePass, string SystemDeviceDateIng, int SystemDeviceEstado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceSystemDevice_Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceSystemDevice_Delete(int SystemDeviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceDeviceByIDE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceDeviceByIDE(string DeviceIDE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceGetAllCities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceGetAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceGetAllTypeDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceGetAllTypeDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceGetAllSystemDeviceList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceGetAllSystemDeviceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceCustomerCompanyByIDE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ServiceCustomerCompanyByIDE(string CustomerCompanyIDE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceIngrCustomerCompanyDataComunications", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceIngrCustomerCompanyDataComunications(int CustomerCompanyID, string CusCompanyDataCameraName, int CusCompanyDataIDE, string CusCompanyDataNextNiveles, string CusCompanyDataSiteName, string CusCompanyDataNameUrl, string CusCompanyDataSiteUser, string CusCompanyDataSitePass, string CusCompanyDataAlarmSite, string CusCompanyDataListenResponse, string CusCompanyDataListenError, string CusCompanyDataPathString, string CusCompanyDataFileName, int CusCompanyDataActivo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : WindowsServiceNextiva.ServiceReference1.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<WindowsServiceNextiva.ServiceReference1.Service1Soap>, WindowsServiceNextiva.ServiceReference1.Service1Soap {
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ServiceSendDataCameraToNextiva(int AlarmSentChannel, int AlarmSentCustCompanyID, string AlarmSentDateIng, string AlarmSentDescription, int AlarmSentEstado, string AlarmSentIDE, string AlarmSentrctTarget, string AlarmSentRuleDescrip, int AlarmSentRuleID, int AlarmSentState, int AlarmSentTargetDirection, int AlarmSentTargetID, int AlarmSentTargetSpeed, int AlarmSentTargetType, int AlarmSentventType) {
            return base.Channel.ServiceSendDataCameraToNextiva(AlarmSentChannel, AlarmSentCustCompanyID, AlarmSentDateIng, AlarmSentDescription, AlarmSentEstado, AlarmSentIDE, AlarmSentrctTarget, AlarmSentRuleDescrip, AlarmSentRuleID, AlarmSentState, AlarmSentTargetDirection, AlarmSentTargetID, AlarmSentTargetSpeed, AlarmSentTargetType, AlarmSentventType);
        }
        
        public bool ServiceTrackingErrorSWG(System.DateTime Fecha, string MachineName, string UserName, int IdSistema, string Mensaje, int Resuelto, int NumeroError, string Modulo) {
            return base.Channel.ServiceTrackingErrorSWG(Fecha, MachineName, UserName, IdSistema, Mensaje, Resuelto, NumeroError, Modulo);
        }
        
        public System.Data.DataSet ServiceDeviceByCompanyID(int CustomerCompanyID) {
            return base.Channel.ServiceDeviceByCompanyID(CustomerCompanyID);
        }
        
        public bool ServiceIngrDevice(string DeviceIDE, string DeviceNameDescrip, int TypeDeviceID, int CustomerCompanyID, int DeviceChannel, string DeviceIDLogon, string DeviceIP, string DeviceUser, string DevicePass, string DevicePort, string DeviceDateIng, int DeviceEstado, int SystemDeviceID) {
            return base.Channel.ServiceIngrDevice(DeviceIDE, DeviceNameDescrip, TypeDeviceID, CustomerCompanyID, DeviceChannel, DeviceIDLogon, DeviceIP, DeviceUser, DevicePass, DevicePort, DeviceDateIng, DeviceEstado, SystemDeviceID);
        }
        
        public bool ServiceIngresoCustomerCompany(string CustomerCompanyIDE, string CustomerCompanyName, string CustomerCompanyDir, string CustomerCompanyPhone, string CustomerCompanyCelPhone, string CustomerCompanyEmail, string CustomerCompanyFax, string CustomerCompanyWebSite, int CiudadID, string CustomerCompanyDateIng, int CustomerCompanyState, string CustomerCompanyShortName) {
            return base.Channel.ServiceIngresoCustomerCompany(CustomerCompanyIDE, CustomerCompanyName, CustomerCompanyDir, CustomerCompanyPhone, CustomerCompanyCelPhone, CustomerCompanyEmail, CustomerCompanyFax, CustomerCompanyWebSite, CiudadID, CustomerCompanyDateIng, CustomerCompanyState, CustomerCompanyShortName);
        }
        
        public bool ServiceDeleteCustomerCompanyDataComuni(int CusCompanyDataID) {
            return base.Channel.ServiceDeleteCustomerCompanyDataComuni(CusCompanyDataID);
        }
        
        public bool ServiceUpdateCustomerCompanyDataComuni(int CusCompanyDataID, int CustomerCompanyID, string CusCompanyDataCameraName, int CusCompanyDataIDE, string CusCompanyDataNextNiveles, string CusCompanyDataSiteName, string CusCompanyDataNameUrl, string CusCompanyDataSiteUser, string CusCompanyDataSitePass, string CusCompanyDataAlarmSite, string CusCompanyDataListenResponse, string CusCompanyDataListenError, string CusCompanyDataPathString, string CusCompanyDataFileName, int CusCompanyDataActivo) {
            return base.Channel.ServiceUpdateCustomerCompanyDataComuni(CusCompanyDataID, CustomerCompanyID, CusCompanyDataCameraName, CusCompanyDataIDE, CusCompanyDataNextNiveles, CusCompanyDataSiteName, CusCompanyDataNameUrl, CusCompanyDataSiteUser, CusCompanyDataSitePass, CusCompanyDataAlarmSite, CusCompanyDataListenResponse, CusCompanyDataListenError, CusCompanyDataPathString, CusCompanyDataFileName, CusCompanyDataActivo);
        }
        
        public bool ServiceIngrCustomerCompanyDataComuni(int CustomerCompanyID, string CusCompanyDataCameraName, int CusCompanyDataIDE, string CusCompanyDataNextNiveles, string CusCompanyDataSiteName, string CusCompanyDataNameUrl, string CusCompanyDataSiteUser, string CusCompanyDataSitePass, string CusCompanyDataAlarmSite, string CusCompanyDataListenResponse, string CusCompanyDataListenError, string CusCompanyDataPathString, string CusCompanyDataFileName, int CusCompanyDataActivo) {
            return base.Channel.ServiceIngrCustomerCompanyDataComuni(CustomerCompanyID, CusCompanyDataCameraName, CusCompanyDataIDE, CusCompanyDataNextNiveles, CusCompanyDataSiteName, CusCompanyDataNameUrl, CusCompanyDataSiteUser, CusCompanyDataSitePass, CusCompanyDataAlarmSite, CusCompanyDataListenResponse, CusCompanyDataListenError, CusCompanyDataPathString, CusCompanyDataFileName, CusCompanyDataActivo);
        }
        
        public System.Data.DataSet ServiceCustomerCompanyDataComuniByCompanyID(int CustomerCompanyID) {
            return base.Channel.ServiceCustomerCompanyDataComuniByCompanyID(CustomerCompanyID);
        }
        
        public System.Data.DataSet ServiceCustomerCompanyDataComuniByID(int CusCompanyDataID) {
            return base.Channel.ServiceCustomerCompanyDataComuniByID(CusCompanyDataID);
        }
        
        public bool ServicioCustomerCompany_Ingreso(string CustomerCompanyIDE, string CustomerCompanyName, string CustomerCompanyDir, string CustomerCompanyPhone, string CustomerCompanyCelPhone, string CustomerCompanyEmail, string CustomerCompanyFax, string CustomerCompanyWebSite, int CiudadID, string CustomerCompanyDateIng, int CustomerCompanyState, string CustomerCompanyShortName) {
            return base.Channel.ServicioCustomerCompany_Ingreso(CustomerCompanyIDE, CustomerCompanyName, CustomerCompanyDir, CustomerCompanyPhone, CustomerCompanyCelPhone, CustomerCompanyEmail, CustomerCompanyFax, CustomerCompanyWebSite, CiudadID, CustomerCompanyDateIng, CustomerCompanyState, CustomerCompanyShortName);
        }
        
        public bool ServicioCustomerCompany_Update(int CustomerCompanyID, string CustomerCompanyIDE, string CustomerCompanyName, string CustomerCompanyDir, string CustomerCompanyPhone, string CustomerCompanyCelPhone, string CustomerCompanyEmail, string CustomerCompanyFax, string CustomerCompanyWebSite, int CiudadID, string CustomerCompanyDateIng, int CustomerCompanyState, string CustomerCompanyShortName) {
            return base.Channel.ServicioCustomerCompany_Update(CustomerCompanyID, CustomerCompanyIDE, CustomerCompanyName, CustomerCompanyDir, CustomerCompanyPhone, CustomerCompanyCelPhone, CustomerCompanyEmail, CustomerCompanyFax, CustomerCompanyWebSite, CiudadID, CustomerCompanyDateIng, CustomerCompanyState, CustomerCompanyShortName);
        }
        
        public bool ServiceCustomerCompany_Delete(int CustomerCompanyID) {
            return base.Channel.ServiceCustomerCompany_Delete(CustomerCompanyID);
        }
        
        public System.Data.DataSet ServiceCustomerCompanyByCustomerIP(string IP) {
            return base.Channel.ServiceCustomerCompanyByCustomerIP(IP);
        }
        
        public System.Data.DataSet ServiceCustomerCompanyByCustomerID(int ID) {
            return base.Channel.ServiceCustomerCompanyByCustomerID(ID);
        }
        
        public System.Data.DataSet ServiceCustomerCompanyAllByCustomer() {
            return base.Channel.ServiceCustomerCompanyAllByCustomer();
        }
        
        public System.Data.DataSet ServiceCustomerCompanyAllListDrop() {
            return base.Channel.ServiceCustomerCompanyAllListDrop();
        }
        
        public System.Data.DataSet ServiceCustomerCompanySearchByNameCustomer(string str_name) {
            return base.Channel.ServiceCustomerCompanySearchByNameCustomer(str_name);
        }
        
        public System.Data.DataSet ServiceCustomerCompanyByCiudadID(int CiudadID) {
            return base.Channel.ServiceCustomerCompanyByCiudadID(CiudadID);
        }
        
        public System.Data.DataSet ServiceDeviceAll() {
            return base.Channel.ServiceDeviceAll();
        }
        
        public System.Data.DataSet ServiceDeviceByID(int DeviceID) {
            return base.Channel.ServiceDeviceByID(DeviceID);
        }
        
        public System.Data.DataSet ServiceAllDeviceByCompanyID(int CustomerCompanyID) {
            return base.Channel.ServiceAllDeviceByCompanyID(CustomerCompanyID);
        }
        
        public System.Data.DataSet ServiceSystemDeviceGetAll() {
            return base.Channel.ServiceSystemDeviceGetAll();
        }
        
        public System.Data.DataSet ServiceSystemDeviceByID(int SystemDeviceID) {
            return base.Channel.ServiceSystemDeviceByID(SystemDeviceID);
        }
        
        public bool ServiceSystemDevice_Ingreso(string SystemDeviceDescrip, string SystemDeviceUser, string SystemDevicePass, string SystemDeviceDateIng, int SystemDeviceEstado) {
            return base.Channel.ServiceSystemDevice_Ingreso(SystemDeviceDescrip, SystemDeviceUser, SystemDevicePass, SystemDeviceDateIng, SystemDeviceEstado);
        }
        
        public bool ServiceSystemDevice_Update(int SystemDeviceID, string SystemDeviceDescrip, string SystemDeviceUser, string SystemDevicePass, string SystemDeviceDateIng, int SystemDeviceEstado) {
            return base.Channel.ServiceSystemDevice_Update(SystemDeviceID, SystemDeviceDescrip, SystemDeviceUser, SystemDevicePass, SystemDeviceDateIng, SystemDeviceEstado);
        }
        
        public bool ServiceSystemDevice_Delete(int SystemDeviceID) {
            return base.Channel.ServiceSystemDevice_Delete(SystemDeviceID);
        }
        
        public System.Data.DataSet ServiceDeviceByIDE(string DeviceIDE) {
            return base.Channel.ServiceDeviceByIDE(DeviceIDE);
        }
        
        public System.Data.DataSet ServiceGetAllCities() {
            return base.Channel.ServiceGetAllCities();
        }
        
        public System.Data.DataSet ServiceGetAllTypeDevice() {
            return base.Channel.ServiceGetAllTypeDevice();
        }
        
        public System.Data.DataSet ServiceGetAllSystemDeviceList() {
            return base.Channel.ServiceGetAllSystemDeviceList();
        }
        
        public System.Data.DataSet ServiceCustomerCompanyByIDE(string CustomerCompanyIDE) {
            return base.Channel.ServiceCustomerCompanyByIDE(CustomerCompanyIDE);
        }
        
        public bool ServiceIngrCustomerCompanyDataComunications(int CustomerCompanyID, string CusCompanyDataCameraName, int CusCompanyDataIDE, string CusCompanyDataNextNiveles, string CusCompanyDataSiteName, string CusCompanyDataNameUrl, string CusCompanyDataSiteUser, string CusCompanyDataSitePass, string CusCompanyDataAlarmSite, string CusCompanyDataListenResponse, string CusCompanyDataListenError, string CusCompanyDataPathString, string CusCompanyDataFileName, int CusCompanyDataActivo) {
            return base.Channel.ServiceIngrCustomerCompanyDataComunications(CustomerCompanyID, CusCompanyDataCameraName, CusCompanyDataIDE, CusCompanyDataNextNiveles, CusCompanyDataSiteName, CusCompanyDataNameUrl, CusCompanyDataSiteUser, CusCompanyDataSitePass, CusCompanyDataAlarmSite, CusCompanyDataListenResponse, CusCompanyDataListenError, CusCompanyDataPathString, CusCompanyDataFileName, CusCompanyDataActivo);
        }
    }
}
